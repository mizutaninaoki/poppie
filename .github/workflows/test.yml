name: CI

on:
  # push: push したら jobs を実行する。
  # workflow_dispatch: github で手動で実行可能にする。(テストを実行するのに、プッシュやプルリクを送りたくない場合に記述しておくと良い)
  push:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

jobs:
  test_backend:
    # runs-on: OSを指定する。
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      # ジョブで利用するリポジトリをチェックアウトするには actions/checkout というアクションが提供されています。uses キーワードを使いアクションを実行することができます。
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      # withでは、アクションで定義される入力パラメータを設定できます。
      with:
        python-version: 3.9
      # Djangoの環境をインストール
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        pip install -r requirements/test.txt
        pip install pytest-django
    - name: Run migrations
      env:
        DJANGO_ENV: ${{secrets.DJANGO_ENV}}
        DJANGO_SECRET_KEY: ${{secrets.DJANGO_SECRET_KEY}}
        ENGINE: ${{secrets.ENGINE}}
        POSTGRES_DB: ${{secrets.POSTGRES_DB}}
        POSTGRES_USER: ${{secrets.POSTGRES_USER}}
        POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        HOST: ${{secrets.HOST}}
        PORT: ${{secrets.PORT}}
        AWS_S3_ACCESS_KEY_ID: ${{secrets.AWS_S3_ACCESS_KEY_ID}}
        AWS_S3_SECRET_ACCESS_KEY: ${{secrets.AWS_S3_SECRET_ACCESS_KEY}}
        AWS_STORAGE_BUCKET_NAME: ${{secrets.AWS_STORAGE_BUCKET_NAME}}
        AWS_REGION_NAME: ${{secrets.AWS_REGION_NAME}}
      run: python manage.py migrate
    - name: Run tests
      run: pytest

